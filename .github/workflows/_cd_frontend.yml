name: CD - frontend

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      version:
        type: string
        required: true
    secrets:
      vercel-token:
        required: true
      sentry-auth-token:
        required: true

jobs:
  cd:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: frontend
    env:
      # Vercel
      VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}
      # Sentry
      SENTRY_AUTH_TOKEN: ${{ secrets.sentry-auth-token }}
      SENTRY_ORG: ${{ vars.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT_FRONTEND }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version-file: frontend/package.json
          cache: yarn
          cache-dependency-path: frontend/yarn.lock
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Create .env
        run: |
          echo NEXT_PUBLIC_STAGE=${{ inputs.environment }}                    >> .env
          echo NEXT_PUBLIC_API_BASE_URL=${{ vars.API_BASE_URL }}              >> .env
          echo NEXT_PUBLIC_IMAGES_BASE_URL=${{ vars.IMAGES_BASE_URL }}        >> .env
          echo NEXT_PUBLIC_GA_MEASUREMENT_ID=${{ vars.GA_MEASUREMENT_ID }}    >> .env
          echo NEXT_PUBLIC_SENTRY_ORG=${{ vars.SENTRY_ORG }}                  >> .env
          echo NEXT_PUBLIC_SENTRY_PROJECT=${{ vars.SENTRY_PROJECT_FRONTEND }} >> .env
          echo NEXT_PUBLIC_SENTRY_DSN=${{ vars.SENTRY_DSN_FRONTEND }}         >> .env

      - name: Deploy (dev)
        if: ${{ inputs.environment != 'prd' }}
        run: |
          yarn run vercel pull --yes --token=${{ secrets.vercel-token }}
          yarn run vercel build --token=${{ secrets.vercel-token }}
          yarn run vercel deploy --prebuilt --token=${{ secrets.vercel-token }}

      - name: Deploy (prd)
        if: ${{ inputs.environment == 'prd' }}
        run: |
          yarn run vercel pull --yes --environment=production --token=${{ secrets.vercel-token }}
          yarn run vercel build --prod --token=${{ secrets.vercel-token }}
          yarn run vercel deploy --prebuilt --prod --token=${{ secrets.vercel-token }}

      - name: Get version
        run: |
          VERSION="${{ inputs.version }}"
          echo "VERSION=${VERSION#refs/tags/frontend/*}" >> $GITHUB_ENV
      - uses: getsentry/action-release@v1
        with:
          version: ${{ env.VERSION }}
          environment: ${{ inputs.environment }}
