service: lgtmgen-backend
frameworkVersion: "3"

custom:
  prefix: lgtmgen-${self:provider.stage}

provider:
  name: aws
  region: us-east-1
  stage: ${opt:stage, "dev"}
  apiName: ${self:custom.prefix}
  ecr:
    images:
      api:
        path: ./
        file: ./dockerfiles/api/Dockerfile
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::Join:
                - ":"
                - - arn:aws:dynamodb
                  - Ref: AWS::Region
                  - Ref: AWS::AccountId
                  - table/${self:custom.prefix}-*
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:DeleteObject
            - s3:ListBucket
          Resource:
            - Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - ${self:custom.prefix}-images
            - Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - ${self:custom.prefix}-images
                  - /*
  environment:
    STAGE: ${self:provider.stage}
    # DynamoDB Table
    DYNAMODB_TABLE_LGTMS: ${env:DYNAMODB_TABLE_LGTMS}
    S3_BUCKET_IMAGES: ${env:S3_BUCKET_IMAGES}

package:
  individually: true

functions:
  api:
    image:
      name: api
      command: [serve, --lambda]
    timeout: 30 # s
    events:
      - http:
          method: ANY
          path: "/{any+}"

resources:
  Resources:
    LgtmsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.prefix}-lgtms
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: created_at
            AttributeType: S
          - AttributeName: status
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: created_at
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: index_by_status
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: created_at
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
